// Generated by CoffeeScript 1.6.3
/* Functions to secure forms.*/


(function() {
  var curve, privKey;

  window.signin = function(form) {
    var pass;
    pass = form.pass.value;
    window.localStorage.pass = pass;
    form.pass.value = sjcl.codec.hex.fromBits(sjcl.hash.sha256.hash(pass));
    return true;
  };

  window.register = function(form) {
    var ecdsa, elGamal, pass, privKey, pubKey;
    pass = form.pass.value;
    window.localStorage.pass = pass;
    form.pass.value = sjcl.codec.hex.fromBits(sjcl.hash.sha256.hash(pass));
    elGamal = sjcl.ecc.elGamal.generateKeys(256, 10);
    ecdsa = sjcl.ecc.ecdsa.generateKeys(256, 10);
    pubKey = {
      elGamal: elGamal.pub.get(),
      ecdsa: ecdsa.pub.get()
    };
    pubKey.elGamal.x = sjcl.codec.base64.fromBits(pubKey.elGamal.x);
    pubKey.elGamal.y = sjcl.codec.base64.fromBits(pubKey.elGamal.y);
    pubKey.ecdsa.x = sjcl.codec.base64.fromBits(pubKey.ecdsa.x);
    pubKey.ecdsa.y = sjcl.codec.base64.fromBits(pubKey.ecdsa.y);
    form.pubKey.value = JSON.stringify(pubKey);
    privKey = {
      elGamal: sjcl.codec.hex.fromBits(elGamal.sec.get()),
      ecdsa: sjcl.codec.hex.fromBits(ecdsa.sec.get())
    };
    form.privKey.value = sjcl.encrypt(pass, JSON.stringify(privKey));
    return true;
  };

  /* Manage server interactions*/


  if (window.privKey != null) {
    privKey = sjcl.decrypt(window.localStorage.pass, window.privKey);
    privKey = JSON.parse(privKey);
    curve = sjcl.ecc.curves.c256;
    privKey.elGamal = new sjcl.bn(privKey.elGamal);
    privKey.ecdsa = new sjcl.bn(privKey.ecdsa);
    privKey.elGamal = new sjcl.ecc.elGamal.secretKey(curve, privKey.elGamal);
    privKey.ecdsa = new sjcl.ecc.ecdsa.secretKey(curve, privKey.ecdsa);
    window.socket = io.connect('http://localhost:3000');
    window.socket.emit('login', window.tag);
  }

}).call(this);
